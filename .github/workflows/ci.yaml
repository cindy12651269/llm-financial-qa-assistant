name: CI  # Workflow name as it appears in GitHub Actions UI

on:  # Trigger conditions for the workflow
  push:
    branches:  # Trigger only when pushing to the 'main' branch
      - "main"
    paths:  # Only run if files in these paths are changed
      - "chatbot/**"
      - "tests/**"
      - ".github/workflows/**"
  pull_request:  # Trigger on PR events (open, sync, etc.)
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - "chatbot/**"
      - "tests/**"
      - ".github/workflows/**"

jobs:
  test:
    runs-on: ubuntu-latest  # Use GitHub-hosted Ubuntu runner
    timeout-minutes: 20     # Cancel if test exceeds 20 minutes

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4  # Checkout code to runner

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.6"  # Match your local dev env

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true  # .venv in project root

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv  # Cache the entire virtualenv directory
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install dependencies with Poetry
        # Only install if cache didn't hit
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-root --no-interaction

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
        
      - name: Run tests
        run: |
          poetry run pytest --durations=5 --log-cli-level=DEBUG --capture=tee-sys -v
